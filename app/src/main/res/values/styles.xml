<resources>

    <style name="AppTheme" parent="Theme.MaterialComponents.Light.DarkActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="AppTheme.FormHeader" parent="Widget.MaterialComponents.TextView">
        <item name="android:fontFamily">@font/bitter</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textColor">@color/colorAccent</item>
        <item name="android:textFontWeight">700</item>
        <item name="android:textSize">@dimen/line_height</item>
    </style>

    <style name="AppTheme.FormSubheader" parent="Widget.MaterialComponents.TextView">
        <item name="android:textAppearance">@style/TextAppearance.AppCompat.Body2</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
    </style>

    <!-- TODO 02: Modify the parent style to see the difference between outlinedBox and FilledBox -->
    <!-- TODO 10: We can customize the colors of the elements in the TextInputLayout -->
    <style name="AppTheme.TextField" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">match_parent</item>
        <item name="android:layout_marginBottom">@dimen/space_12</item>
        <!-- TODO 11: Customize TextInputLayout colors: stroke, hint, startIcon, endIcon, background,
        helper, error, counter -->
        <item name="boxStrokeColor">@color/colorAccent</item>
        <item name="hintTextColor">@color/colorAccent</item>
        <item name="startIconTint">@color/colorAccent</item>
        <item name="endIconTint">@color/colorAccent</item>
        <item name="boxBackgroundColor">@color/textColorHintDisabled</item>
        <item name="helperTextTextColor">@color/colorPrimaryDark</item>
        <item name="errorTextColor">@color/errorColor</item>
        <item name="errorIconTint">@color/errorColor</item>
        <item name="counterOverflowTextColor">@color/errorColor</item>
    </style>

    <!-- TODO 13: Let's check the several styled that Material theming has for buttons -->
    <!-- We'l finally used the Outlined button -->
    <!-- TODO 14: We'll change textColor and rippleColor -->
    <!-- TODO 17: We can modify the style of the button: icon, stroke and radius -->
    <style name="AppTheme.Button" parent="Widget.MaterialComponents.Button.OutlinedButton">
        <item name="android:textColor">@color/colorAccent</item>
        <item name="rippleColor">@color/textColorHintDisabled</item>
        <item name="iconTint">@color/colorAccent</item>
        <item name="strokeColor">@color/colorAccent</item>
        <item name="cornerRadius">@dimen/corner_radius</item>
    </style>

    <!-- TODO 24. MaterialCheckbox. We define the style: button, padding and button tint -->
    <style name="AppTheme.Checkbox" parent="Widget.AppCompat.CompoundButton.CheckBox">
        <item name="android:buttonTint">@color/checkbox_color</item>
        <item name="android:button">@drawable/ic_cloud_checkbox</item>
        <item name="android:paddingLeft">@dimen/space_12</item>
    </style>

    <!-- TODO 27. RadioButton. Style definition is very similar to Checkbox style -->
    <style name="AppTheme.RadioButton" parent="Widget.AppCompat.CompoundButton.RadioButton">
        <item name="buttonTint">@color/checkbox_color</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
    </style>

    <style name="AppTheme.Switch" parent="Widget.AppCompat.CompoundButton.Switch">
        <item name="android:textSize">16sp</item>
        <item name="android:drawableTint">@color/textColorHintEnabled</item>
        <item name="android:drawablePadding">@dimen/space_8</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginTop">@dimen/space_12</item>
    </style>

    <!-- TODO 35. Chips. Actions Chips -->
    <style name="AppTheme.ActionChip" parent="Widget.MaterialComponents.Chip.Action">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <!-- TODO 36. Chips. Make icon visible -->
        <item name="chipIconVisible">true</item>
        <!-- TODO 37. Chips. Customize colors and shape-->
        <item name="chipBackgroundColor">@android:color/white</item>
        <item name="chipStrokeColor">@color/colorAccent</item>
        <item name="chipStrokeWidth">1dp</item>
        <item name="android:textColor">@color/colorAccent</item>
        <item name="rippleColor">@color/colorAccent</item>
        <item name="chipCornerRadius">@dimen/chip_corner_radius</item>
        <!-- TODO 39. Chips. Customize icon -->
        <!--item name="chipIconSize"></item-->
        <item name="chipIconTint">@color/colorAccent</item>
        <item name="chipStartPadding">@dimen/space_12</item>
        <item name="chipIconSize">@dimen/chip_icon_size</item>
    </style>
    <!-- TODO 42. Chips. Choice chips. Define style -->
    <style name="AppTheme.ChoiceChip" parent="Widget.MaterialComponents.Chip.Choice">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
    </style>
</resources>
