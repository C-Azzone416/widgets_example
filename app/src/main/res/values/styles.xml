<resources>

    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="AppTheme.FormHeader" parent="Widget.MaterialComponents.TextView">
        <item name="android:fontFamily">@font/bitter</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textColor">@color/colorAccent</item>
        <item name="android:textFontWeight">700</item>
        <item name="android:textSize">@dimen/line_height</item>
        <!-- TODO 02: TextView. Center-align the text and capitalize it -->
        <!-- do you know the difference between gravity and layout_gravity ?-->
        <item name="android:gravity">center_horizontal</item>
        <item name="android:textAllCaps">true</item>

    </style>

    <style name="AppTheme.FormSubheader" parent="Widget.MaterialComponents.TextView">
        <item name="android:textAppearance">@style/TextAppearance.AppCompat.Body2</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <!-- TODO 03: TextView. Add a smaller letter spacing to the paragraph --><!-- Default value is 0 -->
        <item name="android:letterSpacing">-0.02</item>
        <!-- TODO 04: TextView. Modify lineSpacing using a multiplier--> <!-- Multiplier factor applied to the current lineHeight -->
        <item name="android:lineSpacingMultiplier">1.14</item>
        <item name="android:lineSpacingExtra">@dimen/space_8</item>
        <!-- TODO 05: TextView. Set line height --><!-- Overrides the multiplier effect -->
        <item name="android:lineHeight">@dimen/space_24</item>
    </style>

    <style name="AppTheme.TextFieldContent" parent="Widget.MaterialComponents.TextView">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
    </style>

    <style name="AppTheme.TextFieldLabel" parent="Widget.MaterialComponents.TextView">
        <item name="android:textColor">@color/colorAccent</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textFontWeight">700</item>
        <item name="android:layout_marginTop">@dimen/space_12</item>
        <item name="android:layout_marginBottom">@dimen/space_8</item>
        <!-- TODO 07: TextView. We can define the space between the drawable and the text in label -->
        <item name="android:drawablePadding">@dimen/space_8</item>
        <!-- TODO 08: TextView. We can define the drawable color -->
        <item name="android:drawableTint">@color/colorAccent</item>
        <!-- TODO 09: TextView. We can vertically align to the center both the image and the text-->
        <item name="android:gravity">center_vertical</item>
    </style>
    <!-- TODO 11 CheckedTextView. Specific attributes like checkMark graphic must be defined -->
    <!-- We define a new style AppTheme.TextFieldLabel.Checkable that extends from the style of the
    regular textfield labels -->
    <!-- TODO 12. CheckedTextView. We have to define a new drawable ic_checkmark in order to provide an specific
    graphic for the checked and unchecked states -->
    <!-- TODO 16: Define the common style of all EditText elements: AppTheme.TextField-->
    <!-- backgroundTint: color of the bottom line -->
    <!-- textColorHint: color of the hint -->
    <!-- maxLine: maximum number of lines -->

    <style name="AppTheme.TextField" parent="Widget.AppCompat.EditText">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:backgroundTint">@color/background_tint</item>
        <item name="android:textColorHint">@color/hint_tint</item>
        <item name="android:maxLines">1</item>
        <item name="android:textSize">@dimen/hint_text_size</item>
    </style>

    <style name="AppTheme.TextFieldLabel.Checkable" >
        <item name="android:checkMark">@drawable/ic_checkmark</item>
        <item name="android:checkMarkTint">@color/colorAccent</item>
    </style>

</resources>
