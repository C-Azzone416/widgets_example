<?xml version="1.0" encoding="utf-8"?>
    <ScrollView
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:padding="@dimen/space_24"
            tools:context=".view.ContactFormActivity">

            <TextView
                style="@style/AppTheme.FormHeader"
                android:text="@string/form_title" />

            <TextView
                style="@style/AppTheme.FormSubheader"
                android:layout_marginTop="@dimen/space_12"
                android:layout_marginBottom="@dimen/space_12"
                android:text="@string/form_subtitle" />

            <!-- TODO 18: Include a togglegroup to select the type of contact we are creating -->
            <!-- It's recommended to use materialButtonOutlinedStyle attribute for all child buttons -->
            <!-- Any MaterialButtons added to this view group are automatically marked as checkable -->
            <!-- By default multiple buttons within the same group can be checked -->
            <!-- TODO 19: Enforce only one button checked at a time -->
            <!-- TODO 20: We want to know which is the checked option at any time -->

            <!-- TODO 01: Include TextInputLayout elements -->
            <!-- TODO 03: Change the hint text-->
            <!-- TODO 04: Define the helper text -->
            <!-- TODO 05: Define the starter icon -->
            <!-- TODO 06: Add clear button at the end of the textfield: endIconMode-->

            <!-- TODO 07: Create new TextField for a password. Use again endIconMode but
            with the corresponding inputType in order to hide password characters -->
            <!-- TODO 08: Let's validate password in order to see how errors look like in TextInputLayout -->
            <!-- TODO 09: We can use a character counter to give feedback to the user about the maximum
            number of characters allowed and the current number of characters typed: counterEnabled and counterMaxLenght-->
            <!-- TODO 10: We can customize the colors of the elements in the TextInputLayout -->


            <!-- TODO 26. MaterialRadioButton. Also a two state button. We cannot uncheck it. Usually used in radiogroups -->
            <!-- TODO 27. MaterialRadioButton. Style definition is very similar to Checkbox style -->
            <!-- TODO 28. RadioGroup. Group of radio buttons. It provides several options to the user. Only one can be selected -->
            <!-- TODO 29. RadioGroup. Get the currently checked button -->
            <TextView
                android:layout_marginTop="@dimen/space_8"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textColor="@color/radioGroupTextColor"
                android:drawableStart="@drawable/ic_directions_car_black_24dp"
                android:drawableTint="@color/colorAccent"
                android:drawablePadding="@dimen/space_8"
                android:gravity="center_vertical"
                android:textSize="16sp"
                android:text="@string/car_field"></TextView>

            <!-- TODO 23. MaterialCheckbox. We define a checkbox which is basically a two-states button. Image + text-->
            <!-- TODO 24. MaterialCheckbox. We define the style: button and button color -->
            <!-- TODO 25. MaterialCheckbox. Detect state change -->


            <!-- TODO 12: We add a MaterialButton -->
            <!-- TODO 13: Let's check the several styled that Material theming has for buttons -->
            <!-- TODO 15: We add an icon to the button -->
            <!-- TODO 16: We have to position the icon: gravity, padding -->
            <!-- TODO 17: We can modify the style of the button -->

        </LinearLayout>
    </ScrollView>